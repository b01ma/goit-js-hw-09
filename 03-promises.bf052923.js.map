{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","button","formData","onInput","delay","value","step","amount","onClick","event","preventDefault","console","log","position","Number","i","createPromise","then","catch","Promise","resolve","reject","setTimeout","Math","random","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,0BAGjC,IAAIE,EAAW,GAKf,SAASC,IAQAD,OANPA,EAAW,CACTE,MAAOP,EAAKC,KAAKM,MAAMC,MACvBC,KAAMT,EAAKC,KAAKQ,KAAKD,MACrBE,OAAQV,EAAKC,KAAKS,OAAOF,OAO7B,SAASG,EAAQC,GAEfA,EAAMC,iBACNC,QAAQC,IAAI,YACZD,QAAQC,IAAIV,GAERW,IAAAA,EAAW,EACTN,MAAAA,EAASL,EAASK,OACpBH,IAAAA,EAAQU,OAAOZ,EAASE,OACtBE,MAAAA,EAAOQ,OAAOZ,EAASI,MAE7BK,QAAQC,IAAIL,GAEP,IAAA,IAAIQ,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAEhCF,EAAWE,EACXX,GAASE,EAETK,QAAQC,IAAIR,GACZO,QAAQC,IAAIN,GAEZU,EAAcH,EAAUT,GACzBa,KAAK,EAAGJ,SAAAA,EAAUT,MAAAA,MACjBO,QAAQC,2BAA2BC,QAAeT,SAEnDc,MAAM,EAAGL,SAAAA,EAAUT,MAAAA,MAClBO,QAAQC,0BAA0BC,QAAeT,SAOrD,SAASY,EAAcH,EAAUT,GACxB,OAAA,IAAIe,QAAQ,CAACC,EAASC,KAE3BC,WAAW,KACaC,KAAKC,SAAW,GAEtCJ,EAAS,CACPP,SAAAA,EACAT,MAAAA,IAGFiB,EAAO,CACLR,SAAAA,EACAT,MAAAA,KAGDA,KAhEPP,EAAKC,KAAK2B,iBAAiB,QAAStB,GACpCN,EAAKI,OAAOwB,iBAAiB,QAASjB","file":"03-promises.bf052923.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button[type=\"submit\"]'),\n};\n\nlet formData = {};\n\nrefs.form.addEventListener('input', onInput);\nrefs.button.addEventListener('click', onClick);\n\nfunction onInput() {\n  \n  formData = {\n    delay: refs.form.delay.value,\n    step: refs.form.step.value,\n    amount: refs.form.amount.value,\n  }\n\n  return formData;\n\n};\n\nfunction onClick(event) {\n\n  event.preventDefault();\n  console.log(\"Погнали!\");\n  console.log(formData);\n\n  let position = 0;\n  const amount = formData.amount;\n  let delay = Number(formData.delay);\n  const step = Number(formData.step);\n\n  console.log(amount)\n\n  for (let i = 1; i <= amount; i += 1) {\n\n    position = i;\n    delay += step;\n\n    console.log(delay);\n    console.log(step);\n\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  };\n\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve ({\n        position,\n        delay,\n      })\n    } else {\n      reject({\n        position,\n        delay,\n      })\n      };\n    }, delay)\n    \n  });\n};"]}